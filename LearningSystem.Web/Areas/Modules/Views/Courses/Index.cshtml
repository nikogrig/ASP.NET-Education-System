@model CoursesListingViewModel

@{
    ViewData["Title"] = "Courses";
}

<h2>@ViewData["Title"]</h2>

<div class="row">
    <div class="col-md-6">
        <ul class="list-group article-list">
            @foreach (var course in Model.Courses)
            {
                <li class="list-group-item">
                    <a asp-action="Details"
                       asp-route-courseId="@course.Id"
                       asp-route-name="@course.Name.ToFriendlyUrl()">
                        @course.Name
                    </a>
                    <br />
                    <h5>Start date: @course.StartDate.ToShortDateString()</h5>
                    <h5>End date: @course.EndDate.ToShortDateString() </h5>
                    <h6>Created by <b>@course.Trainer</b></h6>
                    <h5><b>@(course.StartDate < DateTime.UtcNow ? "Outdated" : "Active")</b></h5>
                    <h6>Enrolled students: <b>@course.StudentsCount</b></h6>
                </li>
            }
        </ul>
    </div>
</div>

@if (Model.TotalCourses > Model.Courses.Count())
{
    <ul class="pagination">
        <li class="@(Model.CurrentPage == 1 ? "disabled" : string.Empty)">
            <a asp-controller="Courses"
               asp-action="Index"
               asp-route-page="@Model.PreviousPage"
               aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>
        <li class="@(Model.CurrentPage == Model.TotalPages ? "disabled" : string.Empty)">
            <a asp-controller="Courses"
               asp-action="Index"
               asp-route-page="@Model.NextPage"
               aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>
    </ul>
}
